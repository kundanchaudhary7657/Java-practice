class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer>updated= new ArrayList<>();
        int n= matrix.length;
        int m= matrix[0].length;
          int top=0;
          int bottom= n-1;
          int right=m-1;
          int left =0;
     while(top<=bottom && left<=right){
        for(int i=left;i<=right;i++){
           updated.add(matrix[top][i]);
        }
        top++;

        for(int i=top;i<=bottom;i++){
            updated.add(matrix[i][right]);
        }
        right--;
           
           if(top<=bottom){
        for(int i=right;i>=left;i--){
            updated.add(matrix[bottom][i]);
        }
        bottom--;
           }

        if(left<=right){
        for(int i=bottom;i>=top;i--){
            updated.add(matrix[i][left]);
        }
        left++;
        }
     }
     return updated;
    }
}
